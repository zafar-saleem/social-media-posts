.container {
  --width: 10rem;
  --height: 3rem;
  --bounce: cubic-bezier(.47, 1.64, .41, .8);

  & * {
    transition: 0.4s var(--bounce);
  }

  & input {
    display: none;
  }

  &:has(> .button > input:checked) {
    --width: 25rem;
    --height: 18.25rem;
    
    & > .button {
      padding: 0.25rem;
      border-radius: 1.25rem;
      width: 25.5rem;
      box-shadow: 0 0 1rem 0 rgb(40 40 40);

      .button_label {
        display: none;
      }
    }
    
    .macros {
      scale: 1;
      display: flex;
      border-radius: 1rem;
      opacity: 1;
      filter: blur(0);

      @starting-style {
        opacity: 0;
        scale: 0;
        filter: blur(5px);
      }
    }
  }

  .button {
    overflow: hidden;
    background-color: rgb(60 60 60);
    color: rgb(230 230 230);
    padding: 0.5rem 0.75rem;
    border-radius: 5rem;
    width: var(--width);
    height: var(--height);
    display: grid;
    grid-template-columns: 1fr;
    text-align: center;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    cursor: pointer;

    & > * {
      grid-area: 1 / 1;
    }

    .macros {
      scale: 0;
      background-color: rgb(251 251 251);
      color: rgb(80 80 80);
      border-radius: 1rem;
      border-radius: 5rem;
      display: flex;
      flex-direction: column;
      gap: 2rem;
      text-align: left;
      padding: 0.5rem;
      width: var(--width);
      display: none;
      opacity: 0;
      filter: blur(5px);

      .header {
        display: flex;
        align-items: center;
        gap: 1rem;
        width: 100%;
        padding-inline: 0.5rem;

        .title {
          font-weight: bold;
        }
        
        .icon {
          margin-left: auto;
          background: none;
          border: none;
          display: flex;
          align-items: center;
        }
      }

      .contents {
        .macros_pie {
          display: flex;
          flex-direction: column;
          justify-self: center;
          align-items: center;
          gap: 0.25rem;
          align-items: center;
          justify-content: center;
          background-color: rgb(251 251 251);
          width: 7.25rem;
          aspect-ratio: 1;
          border-radius: 100%;
          position: relative;

          &::before {
            content: "";
            position: absolute;
            top: -0.75rem;
            left: -0.75rem;
            width: calc(100% + 1.5rem);
            height: calc(100% + 1.5rem);
            background: conic-gradient(
              from 0,
              rgb(244 102 76) var(--cal-progress),
              rgb(231, 232, 236) 0%
            );
            transition: 0.5s;
            border-radius: 100%;
            z-index: -1;
          }

          .pie_label {
            font-size: 1.3rem;
          }

          .support_text {
            color: rgb(30 30 30 / 0.3);
            font-size: 0.7rem;
          }
        }
      }

      .footer {
        display: flex;
        gap: 2rem;
        align-content: center;
        justify-content: center;

        .box {
          padding: 1rem;
          display: flex;
          gap: 0.5rem;
          border-radius: 1rem;

          &:hover {
            background-color: rgb(40 40 40 / 0.1);
          }

          .box_bar {
            width: 5px;
            height: 100%;
            background-color: rgb(248 199 192);
            border-radius: 10rem;
            position: relative;
            overflow: hidden;

            &::before {
              content: "";
              position: absolute;
              bottom: 0;
              width: 5px;
              height: var(--progress);
              border-radius: 10rem;
              background-color: rgb(239 67 46);
            }
          }

          .box_labels {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;

            .label_text {
              color: rgb(40 40 40);
              font-weight: bold;
            }

            .states {
              & > span:first-child {
                color: rgb(40 40 40);
              }
              
              & > span:last-child {
                color: rgb(40 40 40 / 0.3);
              }
            }
          }
        }
      }
    }
  }
}